//DESCRIPTION: Merges two selected tables// Version 1.0 (c) www.In-Tools.com//Use at your own risk!(function(){	var kAppVersion = parseFloat(app.version);	if(kAppVersion>=6){app.doScript(main, undefined , undefined,UndoModes.fastEntireScript,"Merge Tables")}	else{main()}	function main(){		var tables = GetTables(app.selection);		if(tables.length<2){alert("Please Select Two Tables");return}		table1=tables[0];		table2=tables[1];		var d=app.dialogs.add({name:"Merge Tables"});		var bg = d.dialogColumns.add().radiobuttonGroups.add();		bg.radiobuttonControls.add({staticLabel:"Merge Below"});		bg.radiobuttonControls.add({staticLabel:"Merge Beside"});		bg.selectedButton=0;		var result=d.show();		if(!result){d.destroy();return}		var mergeType = bg.selectedButton;		d.destroy();		if(mergeType==0){			MergeTableBelow(table1,table2)}		else{MergeTableBeside(table1,table2)}		}	function MergeTableBelow(table1,table2){		var table2ColumnNumber = table2.columns.length;		var table2RowNumber = table2.rows.length;		while(table2ColumnNumber>table1.columns.length){			table1.columns.add();			}		for(var i=0;i<table2RowNumber;i++){			table1.rows.add();			}		var i=0;		for(var j=table2RowNumber-1;j>=0;j--){			table1.rows[-1-i].contents=table2.rows[j].contents;			i++;			}		table2.remove();		}	function MergeTableBeside(table1,table2){		var table1ColumnNumber = table1.columns.length;		var table2ColumnNumber = table2.columns.length;		var table2RowNumber = table2.rows.length;		while(table2RowNumber>table1.rows.length){			table1.rows.add();			}		for(var i=0;i<table2ColumnNumber;i++){			table1.columns.add();			}		var i=0;		for(var j=table2ColumnNumber-1;j>=0;j--){			table1.columns[-1-i].contents=table2.columns[j].contents;			i++;			}		table2.remove();		}	function GetTables(what){		//alert(what);		var retVal = []		if(what instanceof Array){			for(var i=0;i<what.length;i++){				retVal = retVal.concat(GetTables(what[i]));				}			}		else{			if(what.hasOwnProperty("tables")){				var tables = what.tables;				for (var i=0;i<tables.length;i++){					retVal.push(tables[i]);					}				}			if(what.parent instanceof Cell){retVal.push(what.parent.parent)}			if(what.parent instanceof Table){retVal.push(what.parent)}			}		return retVal;		}	})();