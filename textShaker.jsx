//Text Scribbler//Un script de Loic Aigon//Si vous appréciez ce script, n'oubliez pas de m'envoyer un petit mail :-)//Lance le scriptMain();//Vérification du contextefunction validContext(){	if(app.documents.length==0)	{		alert("Il faut un document ouvert avec du texte !");	}	if(app.selection.length==0)	{		alert("Il faut sélectionner un bloc texte ou du texte pour lancer ce script !");	}	else	{		var mySel = app.selection[0];		switch (mySel.constructor.name)		{			case "InsertionPoint":			case "Character":			case "Word":			case "TextStyleRange":			case "Line":			case "Paragraph":			case "TextColumn":			case "Text":			case "Story":				myTf = mySel.parent;				return myTf;				break;					case "TextFrame":				myTf = mySel;				return myTf;				break;							default:				alert("Il faut sélectionner un bloc texte ou du texte pour lancer ce script !");			break;		}	}}function Main(){	if(validContext())	{		var myTf = validContext();		myDlg();	}}//Décale tous les caractères du bloc texte sélectionnéfunction scribble(myTf,min,max,step){	var elements = myTf.texts[0].characters.everyItem().getElements();	var elg = elements.length;	for(var i = 0; i < elg; i++) 	{	   elements[i].baselineShift = Math.floor((1/step)*(Math.random()*(max-min)+min))/(1/step);	}}//Création du dialoguefunction myDlg(){	var myDlg = app.dialogs.add({name:"TextScribbler 1.0. Un script de Loic Aigon"});	with(myDlg)	{		var mySteps = ["0.1 pt","0.2 pt","0.5 pt","1 pt","2 pt","5 pt","10 pt"];		with(dialogColumns.add())		{			staticTexts.add({staticLabel:"Utiliser ce script pour créer des effets de décalage aléatoire dans les caractères."});			with(borderPanels.add()){					with(dialogColumns.add()){						staticTexts.add({staticLabel:"Décalage maximum bas des caractères:"});						staticTexts.add({staticLabel:"Décalage maximum haut des caractères:"});						staticTexts.add({staticLabel:"Valeur du pas de décalage:"});					}					with(dialogColumns.add()){						minShift = measurementEditboxes.add({editValue:-1, editUnits:MeasurementUnits.points, minWidth:82});						maxShift = measurementEditboxes.add({editValue:1, editUnits:MeasurementUnits.points, minWidth:82});						stepValue = dropdowns.add({stringList:mySteps, selectedIndex:2});					}				}			staticTexts.add({staticLabel:""});			staticTexts.add({staticLabel:"***** Si vous appréciez ce script, un petit mail à loic_aigon@yahoo.fr ferait plaisir ;-) ***** "});		}		}	if(myDlg.show())	{		var min = minShift.editValue;		var max = maxShift.editValue;		var step = Number(mySteps[stepValue.selectedIndex].split(" pt")[0]);		scribble(myTf,min,max,step);	}	myDlg.destroy();}